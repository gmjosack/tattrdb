#!/usr/bin/env python

""" Command-line interface to using TattrDB."""

import argparse
import logging
import sys

from tattrdb import __version__


def host_command(args):
    print args

def tag_command(args):
    print args

def attr_command(args):
    print args

def query_command(args):
    print args

def main():

    description_msg = "Issue commands to TattrDB."
    parser = argparse.ArgumentParser(description=description_msg)

    parser.add_argument("-V", "--version", action="store_true", default=False,
                        help="Display version information.")

    subparsers = parser.add_subparsers(dest="command")

    # Host SubCommands
    host_parser = subparsers.add_parser("host", help="Commands for listing and modifying hosts.")
    host_parser.set_defaults(func=host_command)
    host_subparser = host_parser.add_subparsers(dest="subcommand")

    host_add_parser = host_subparser.add_parser("add", help="Add a new host.")
    host_add_parser.add_argument("hostname", nargs=1)

    host_rm_parser = host_subparser.add_parser("rm", help="Remove a host.")
    host_rm_parser.add_argument("hostname", nargs=1)

    host_rename_parser = host_subparser.add_parser("rename", help="Rename a host.")
    host_rename_parser.add_argument("old_hostname", nargs=1)
    host_rename_parser.add_argument("new_hostname", nargs=1)

    host_get_parser = host_subparser.add_parser("get", help="Get tags/attrs for a host.")
    host_get_parser.add_argument("hostname", nargs=1)

    host_list_parser = host_subparser.add_parser("list", help="List all hosts.")
    host_list_parser.add_argument("--tag", help="Only list hosts with this tag.")
    host_list_parser.add_argument("--attr", help="Only list hosts with this attribute.")
    host_list_parser.add_argument("--details", action="store_true", help="List all tags and attributes with hosts.")

    host_set_parser = host_subparser.add_parser("set", help="Set tags/attrs on a host.")
    host_set_parser.add_argument("hostname", nargs=1)
    host_set_parser.add_argument("type", choices=["tag", "attr"], nargs=1)
    host_set_parser.add_argument("tag", nargs="+")

    host_unset_parser = host_subparser.add_parser("unset", help="Unset tags/attrs from a host.")
    host_unset_parser.add_argument("hostname", nargs=1)
    host_unset_parser.add_argument("type", choices=["tag", "attr"], nargs=1)
    host_unset_parser.add_argument("tag", nargs="+")

    # Tag SubCommands
    tag_parser = subparsers.add_parser("tag", help="Commands for listing and modifying tags.")
    tag_parser.set_defaults(func=tag_command)
    tag_subparser = tag_parser.add_subparsers(dest="subcommand")

    tag_add_parser = tag_subparser.add_parser("add", help="Add a new tag.")
    tag_add_parser.add_argument("tag", nargs=1)

    tag_rm_parser = tag_subparser.add_parser("rm", help="Remove a tag.")
    tag_rm_parser.add_argument("tag", nargs=1)
    tag_rm_parser.add_argument("--force", action="store_true", help="Remove tag from all hosts and remove.")

    tag_list_parser = tag_subparser.add_parser("list", help="List all tags.")

    # Tag SubCommands
    attr_parser = subparsers.add_parser("attr", help="Commands for listing and modifying attributes.")
    attr_parser.set_defaults(func=attr_command)
    attr_subparser = attr_parser.add_subparsers(dest="subcommand")

    attr_add_parser = attr_subparser.add_parser("add", help="Add a new attribute.")
    attr_add_parser.add_argument("attribute", nargs=1)

    attr_rm_parser = attr_subparser.add_parser("rm", help="Remove a attribute.")
    attr_rm_parser.add_argument("attribute", nargs=1)
    attr_rm_parser.add_argument("--force", action="store_true", help="Remove attr from all hosts and remove.")

    attr_list_parser = attr_subparser.add_parser("list", help="List all attributes.")

    attr_get_parser = attr_subparser.add_parser("get", help="Get an attribute value from a host.")
    attr_get_parser.add_argument("hostname", nargs=1)
    attr_get_parser.add_argument("attribute", nargs=1)

    # Misc. SubCommands
    query_parser = subparsers.add_parser("query", help="Query for hosts using set syntax.")
    query_parser.set_defaults(func=query_command)

    args = parser.parse_args()

    if args.version:
        print "TattrDB Version: %s" % __version__
        sys.exit()

    args.func(args)

if __name__ == "__main__":
    logging.basicConfig()
    main()
